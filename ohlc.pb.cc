// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ohlc.proto

#include "ohlc.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ohlc {

inline constexpr StockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stock_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StockRequest::StockRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StockRequestDefaultTypeInternal() {}
  union {
    StockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StockRequestDefaultTypeInternal _StockRequest_default_instance_;

inline constexpr SendOHLCResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendOHLCResponse::SendOHLCResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendOHLCResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendOHLCResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendOHLCResponseDefaultTypeInternal() {}
  union {
    SendOHLCResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendOHLCResponseDefaultTypeInternal _SendOHLCResponse_default_instance_;

inline constexpr OHLC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stock_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        open_{0},
        high_{0},
        low_{0},
        close_{0},
        volume_{0},
        value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OHLC::OHLC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OHLCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OHLCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OHLCDefaultTypeInternal() {}
  union {
    OHLC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OHLCDefaultTypeInternal _OHLC_default_instance_;
}  // namespace ohlc
static ::_pb::Metadata file_level_metadata_ohlc_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ohlc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ohlc_2eproto = nullptr;
const ::uint32_t TableStruct_ohlc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.close_),
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::ohlc::OHLC, _impl_.stock_code_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ohlc::StockRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ohlc::StockRequest, _impl_.stock_code_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ohlc::SendOHLCResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ohlc::SendOHLCResponse, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ohlc::OHLC)},
        {15, -1, -1, sizeof(::ohlc::StockRequest)},
        {24, -1, -1, sizeof(::ohlc::SendOHLCResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ohlc::_OHLC_default_instance_._instance,
    &::ohlc::_StockRequest_default_instance_._instance,
    &::ohlc::_SendOHLCResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ohlc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nohlc.proto\022\004ohlc\"q\n\004OHLC\022\014\n\004open\030\001 \001(\001"
    "\022\014\n\004high\030\002 \001(\001\022\013\n\003low\030\003 \001(\001\022\r\n\005close\030\004 \001"
    "(\001\022\016\n\006volume\030\005 \001(\001\022\r\n\005value\030\006 \001(\001\022\022\n\nsto"
    "ck_code\030\007 \001(\t\"\"\n\014StockRequest\022\022\n\nstock_c"
    "ode\030\001 \001(\t\"#\n\020SendOHLCResponse\022\017\n\007message"
    "\030\001 \001(\t2p\n\023OHLCConsumerService\022.\n\010SendOHL"
    "C\022\n.ohlc.OHLC\032\026.ohlc.SendOHLCResponse\022)\n"
    "\007GetOHLC\022\022.ohlc.StockRequest\032\n.ohlc.OHLC"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_ohlc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ohlc_2eproto = {
    false,
    false,
    328,
    descriptor_table_protodef_ohlc_2eproto,
    "ohlc.proto",
    &descriptor_table_ohlc_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_ohlc_2eproto::offsets,
    file_level_metadata_ohlc_2eproto,
    file_level_enum_descriptors_ohlc_2eproto,
    file_level_service_descriptors_ohlc_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ohlc_2eproto_getter() {
  return &descriptor_table_ohlc_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ohlc_2eproto(&descriptor_table_ohlc_2eproto);
namespace ohlc {
// ===================================================================

class OHLC::_Internal {
 public:
};

OHLC::OHLC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ohlc.OHLC)
}
inline PROTOBUF_NDEBUG_INLINE OHLC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : stock_code_(arena, from.stock_code_),
        _cached_size_{0} {}

OHLC::OHLC(
    ::google::protobuf::Arena* arena,
    const OHLC& from)
    : ::google::protobuf::Message(arena) {
  OHLC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, open_),
           offsetof(Impl_, value_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::value_));

  // @@protoc_insertion_point(copy_constructor:ohlc.OHLC)
}
inline PROTOBUF_NDEBUG_INLINE OHLC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stock_code_(arena),
        _cached_size_{0} {}

inline void OHLC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::value_));
}
OHLC::~OHLC() {
  // @@protoc_insertion_point(destructor:ohlc.OHLC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OHLC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.stock_code_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OHLC::Clear() {
// @@protoc_insertion_point(message_clear_start:ohlc.OHLC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stock_code_.ClearToEmpty();
  ::memset(&_impl_.open_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.value_) -
      reinterpret_cast<char*>(&_impl_.open_)) + sizeof(_impl_.value_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OHLC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 28, 2> OHLC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OHLC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double open = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.open_)}},
    // double high = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.high_)}},
    // double low = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.low_)}},
    // double close = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.close_)}},
    // double volume = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.volume_)}},
    // double value = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.value_)}},
    // string stock_code = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.stock_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double open = 1;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.open_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double high = 2;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.high_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double low = 3;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.low_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double close = 4;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.close_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double volume = 5;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double value = 6;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string stock_code = 7;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.stock_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\0\0\0\0\0\0\12"
    "ohlc.OHLC"
    "stock_code"
  }},
};

::uint8_t* OHLC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ohlc.OHLC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double open = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_open = this->_internal_open();
  ::uint64_t raw_open;
  memcpy(&raw_open, &tmp_open, sizeof(tmp_open));
  if (raw_open != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_open(), target);
  }

  // double high = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_high = this->_internal_high();
  ::uint64_t raw_high;
  memcpy(&raw_high, &tmp_high, sizeof(tmp_high));
  if (raw_high != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_high(), target);
  }

  // double low = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_low = this->_internal_low();
  ::uint64_t raw_low;
  memcpy(&raw_low, &tmp_low, sizeof(tmp_low));
  if (raw_low != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_low(), target);
  }

  // double close = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_close = this->_internal_close();
  ::uint64_t raw_close;
  memcpy(&raw_close, &tmp_close, sizeof(tmp_close));
  if (raw_close != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_close(), target);
  }

  // double volume = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volume = this->_internal_volume();
  ::uint64_t raw_volume;
  memcpy(&raw_volume, &tmp_volume, sizeof(tmp_volume));
  if (raw_volume != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_volume(), target);
  }

  // double value = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_value(), target);
  }

  // string stock_code = 7;
  if (!this->_internal_stock_code().empty()) {
    const std::string& _s = this->_internal_stock_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ohlc.OHLC.stock_code");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ohlc.OHLC)
  return target;
}

::size_t OHLC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ohlc.OHLC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stock_code = 7;
  if (!this->_internal_stock_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_stock_code());
  }

  // double open = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_open = this->_internal_open();
  ::uint64_t raw_open;
  memcpy(&raw_open, &tmp_open, sizeof(tmp_open));
  if (raw_open != 0) {
    total_size += 9;
  }

  // double high = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_high = this->_internal_high();
  ::uint64_t raw_high;
  memcpy(&raw_high, &tmp_high, sizeof(tmp_high));
  if (raw_high != 0) {
    total_size += 9;
  }

  // double low = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_low = this->_internal_low();
  ::uint64_t raw_low;
  memcpy(&raw_low, &tmp_low, sizeof(tmp_low));
  if (raw_low != 0) {
    total_size += 9;
  }

  // double close = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_close = this->_internal_close();
  ::uint64_t raw_close;
  memcpy(&raw_close, &tmp_close, sizeof(tmp_close));
  if (raw_close != 0) {
    total_size += 9;
  }

  // double volume = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volume = this->_internal_volume();
  ::uint64_t raw_volume;
  memcpy(&raw_volume, &tmp_volume, sizeof(tmp_volume));
  if (raw_volume != 0) {
    total_size += 9;
  }

  // double value = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OHLC::_class_data_ = {
    OHLC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OHLC::GetClassData() const {
  return &_class_data_;
}

void OHLC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OHLC*>(&to_msg);
  auto& from = static_cast<const OHLC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ohlc.OHLC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stock_code().empty()) {
    _this->_internal_set_stock_code(from._internal_stock_code());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_open = from._internal_open();
  ::uint64_t raw_open;
  memcpy(&raw_open, &tmp_open, sizeof(tmp_open));
  if (raw_open != 0) {
    _this->_internal_set_open(from._internal_open());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_high = from._internal_high();
  ::uint64_t raw_high;
  memcpy(&raw_high, &tmp_high, sizeof(tmp_high));
  if (raw_high != 0) {
    _this->_internal_set_high(from._internal_high());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_low = from._internal_low();
  ::uint64_t raw_low;
  memcpy(&raw_low, &tmp_low, sizeof(tmp_low));
  if (raw_low != 0) {
    _this->_internal_set_low(from._internal_low());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_close = from._internal_close();
  ::uint64_t raw_close;
  memcpy(&raw_close, &tmp_close, sizeof(tmp_close));
  if (raw_close != 0) {
    _this->_internal_set_close(from._internal_close());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volume = from._internal_volume();
  ::uint64_t raw_volume;
  memcpy(&raw_volume, &tmp_volume, sizeof(tmp_volume));
  if (raw_volume != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OHLC::CopyFrom(const OHLC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ohlc.OHLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OHLC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OHLC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OHLC::InternalSwap(OHLC* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stock_code_, &other->_impl_.stock_code_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OHLC, _impl_.value_)
      + sizeof(OHLC::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(OHLC, _impl_.open_)>(
          reinterpret_cast<char*>(&_impl_.open_),
          reinterpret_cast<char*>(&other->_impl_.open_));
}

::google::protobuf::Metadata OHLC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ohlc_2eproto_getter, &descriptor_table_ohlc_2eproto_once,
      file_level_metadata_ohlc_2eproto[0]);
}
// ===================================================================

class StockRequest::_Internal {
 public:
};

StockRequest::StockRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ohlc.StockRequest)
}
inline PROTOBUF_NDEBUG_INLINE StockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : stock_code_(arena, from.stock_code_),
        _cached_size_{0} {}

StockRequest::StockRequest(
    ::google::protobuf::Arena* arena,
    const StockRequest& from)
    : ::google::protobuf::Message(arena) {
  StockRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ohlc.StockRequest)
}
inline PROTOBUF_NDEBUG_INLINE StockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stock_code_(arena),
        _cached_size_{0} {}

inline void StockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StockRequest::~StockRequest() {
  // @@protoc_insertion_point(destructor:ohlc.StockRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StockRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.stock_code_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ohlc.StockRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stock_code_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StockRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> StockRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StockRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string stock_code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StockRequest, _impl_.stock_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string stock_code = 1;
    {PROTOBUF_FIELD_OFFSET(StockRequest, _impl_.stock_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\12\0\0\0\0\0\0"
    "ohlc.StockRequest"
    "stock_code"
  }},
};

::uint8_t* StockRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ohlc.StockRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string stock_code = 1;
  if (!this->_internal_stock_code().empty()) {
    const std::string& _s = this->_internal_stock_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ohlc.StockRequest.stock_code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ohlc.StockRequest)
  return target;
}

::size_t StockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ohlc.StockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stock_code = 1;
  if (!this->_internal_stock_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_stock_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StockRequest::_class_data_ = {
    StockRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StockRequest::GetClassData() const {
  return &_class_data_;
}

void StockRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StockRequest*>(&to_msg);
  auto& from = static_cast<const StockRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ohlc.StockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stock_code().empty()) {
    _this->_internal_set_stock_code(from._internal_stock_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StockRequest::CopyFrom(const StockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ohlc.StockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StockRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StockRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StockRequest::InternalSwap(StockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stock_code_, &other->_impl_.stock_code_, arena);
}

::google::protobuf::Metadata StockRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ohlc_2eproto_getter, &descriptor_table_ohlc_2eproto_once,
      file_level_metadata_ohlc_2eproto[1]);
}
// ===================================================================

class SendOHLCResponse::_Internal {
 public:
};

SendOHLCResponse::SendOHLCResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ohlc.SendOHLCResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendOHLCResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

SendOHLCResponse::SendOHLCResponse(
    ::google::protobuf::Arena* arena,
    const SendOHLCResponse& from)
    : ::google::protobuf::Message(arena) {
  SendOHLCResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ohlc.SendOHLCResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendOHLCResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void SendOHLCResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendOHLCResponse::~SendOHLCResponse() {
  // @@protoc_insertion_point(destructor:ohlc.SendOHLCResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendOHLCResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SendOHLCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ohlc.SendOHLCResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SendOHLCResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> SendOHLCResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SendOHLCResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendOHLCResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(SendOHLCResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\7\0\0\0\0\0\0"
    "ohlc.SendOHLCResponse"
    "message"
  }},
};

::uint8_t* SendOHLCResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ohlc.SendOHLCResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ohlc.SendOHLCResponse.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ohlc.SendOHLCResponse)
  return target;
}

::size_t SendOHLCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ohlc.SendOHLCResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SendOHLCResponse::_class_data_ = {
    SendOHLCResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SendOHLCResponse::GetClassData() const {
  return &_class_data_;
}

void SendOHLCResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SendOHLCResponse*>(&to_msg);
  auto& from = static_cast<const SendOHLCResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ohlc.SendOHLCResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendOHLCResponse::CopyFrom(const SendOHLCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ohlc.SendOHLCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SendOHLCResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SendOHLCResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SendOHLCResponse::InternalSwap(SendOHLCResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata SendOHLCResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ohlc_2eproto_getter, &descriptor_table_ohlc_2eproto_once,
      file_level_metadata_ohlc_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ohlc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
